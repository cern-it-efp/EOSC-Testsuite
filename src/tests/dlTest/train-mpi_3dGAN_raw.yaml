apiVersion: kubeflow.org/v1alpha1
kind: MPIJob
metadata:
  labels:
    app: eleescan-3dgan
  name: train-mpijob
spec:
  backoffLimit: 12
  replicas: REP_PH
  template:
    spec:
      #hostNetwork: true
      containers:
      - image: ipeluaga/custom_mpi_learn # gitlab-registry.cern.ch/cloud-infrastructure/gpu-mpi-containers/mpi_learn # use here my custom image tor testing: aws-cli with --no-sign-request to the public CERN s3 bucket with the GAN data
        imagePullPolicy: Always
        name: train-mpijob
        resources:
          limits:
            nvidia.com/gpu: 1
        command: ["/bin/sh","-c"]
        args:
        - mpirun -tag-output -x LD_LIBRARY_PATH -x PATH -x TERM=linux -x GANINMEM=/tmp/gan_data -x USES3=1 -x NCCL_DEBUG=INFO -x NCCL_SOCKET_IFNAME=eth0 -mca pml ob1 -mca btl ^openib python3 MPIGDriver.py bb.json train_3d.list test_3d.list --tf --epochs 1 --features-name X --labels-name y --easgd --worker-opt rmsprop &&
          while true;
          do echo "keeping this alive...";
          sleep 5;
          done;
        volumeMounts:
        - name: train-list
          mountPath: "/mpi_learn/train_3d.list"
          subPath: "train_3d.list"
        - name: test-list
          mountPath: "/mpi_learn/test_3d.list"
          subPath: "test_3d.list"
      volumes:
      - name: test-list
        configMap:
          name: 3dgan-datafile-lists
          items:
          - key: "test_3d.list"
            path: "test_3d.list"
      - name: train-list
        configMap:
          name: 3dgan-datafile-lists
          items:
          - key: "train_3d.list"
            path: "train_3d.list"
