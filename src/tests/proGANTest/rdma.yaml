- name: Clone azhpc-images repo
  hosts: all
  become: yes
  gather_facts: true
  tasks:
  - git:
      repo: https://github.com/Azure/azhpc-images
      dest: '/azhpc-images'

- name: Edit install.sh
  hosts: all
  become: yes
  gather_facts: true
  tasks:
  - replace:
      path: /azhpc-images/ubuntu/ubuntu-18.x/ubuntu-18.04-hpc/install.sh
      regexp: './install_gcc.sh'
      replace: ''

- name: Edit install.sh
  hosts: all
  become: yes
  gather_facts: true
  tasks:
  - replace:
      path: /azhpc-images/ubuntu/ubuntu-18.x/ubuntu-18.04-hpc/install.sh
      regexp: './install_mpis.sh'
      replace: ''

- name: Edit install.sh
  hosts: all
  become: yes
  gather_facts: true
  tasks:
  - replace:
      path: /azhpc-images/ubuntu/ubuntu-18.x/ubuntu-18.04-hpc/install.sh
      regexp: './install_nvidiagpudriver.sh'
      replace: ''

- name: Edit install.sh
  hosts: all
  become: yes
  gather_facts: true
  tasks:
  - replace:
      path: /azhpc-images/ubuntu/ubuntu-18.x/ubuntu-18.04-hpc/install.sh
      regexp: './install_amd_libs.sh'
      replace: ''

- name: Edit install.sh
  hosts: all
  become: yes
  gather_facts: true
  tasks:
  - replace:
      path: /azhpc-images/ubuntu/ubuntu-18.x/ubuntu-18.04-hpc/install.sh
      regexp: './install_intel_libs.sh'
      replace: ''

- name: Install InfiniBand RDMA drivers
  hosts: all
  become: yes
  gather_facts: true
  tasks:
  - command: bash install.sh
    args:
      chdir: /azhpc-images/ubuntu/ubuntu-18.x/ubuntu-18.04-hpc

- name: Add the InfiniBand extension  # TODO: this requires az login on the host machine and has to be a loop: 1 command per cluster node
  hosts: 127.0.0.1
  connection: local
  gather_facts: true
  tasks:
  - shell: | # Note this will add the extension to all the existing VMs, which is not desired as there might be VMs that were not created by me
      for vm in $(az vm list | jq .[].name | sed 's/"//g'); do
        az vm extension set --resource-group efp --vm-name $vm --name InfiniBandDriverLinux --publisher Microsoft.HpcCompute --version 1.1
      done

- name: Deploy RDMA config map
  hosts: master
  become: yes
  tasks:
     - shell: kubectl create -f https://raw.githubusercontent.com/Mellanox/k8s-rdma-shared-dev-plugin/master/images/k8s-rdma-shared-dev-plugin-config-map.yaml # k8s-rdma-shared-dev-plugin-config-map.yaml
       register: rdma_config_map
       until: rdma_config_map.rc == 0
       retries: 15
       delay: 6

- name: Deploy RDMA device plugin
  hosts: master
  become: yes
  tasks:
     - shell: kubectl create -f https://raw.githubusercontent.com/Mellanox/k8s-rdma-shared-dev-plugin/master/images/k8s-rdma-shared-dev-plugin-ds.yaml # k8s-rdma-shared-dev-plugin-ds.yaml
       register: rdma_device_plugin
       until: rdma_device_plugin.rc == 0
       retries: 15
       delay: 6
