# ------------------------------------------------------------------------
# TODO: the AWS AMI we are using already has Anaconda, try to remove this or install the new one somewhere else # TODO: maybe do this as an option --latest-anaconda, or in case there is no anaconda3 on the VM
#- name: Rename existing anaconda3
#  command: mv ~/anaconda3 ~/anaconda3_original
#- name: Create original_stuff dir
#  ignore_errors: yes
#  file:
#    path: '~/original_stuff'
#    state: directory
#- name: Move existing stuff
#  command: mv * ~/original_stuff
#  ignore_errors: yes
- name: Remove existing stuff
  command: rm -rf ~/*
  ignore_errors: yes

# TODO: UN-NY installed Anaconda bc the AMI there used did NOT have it. Ours DO has it, however, keep this bc it will be handy for other providers
- name: Dowload Anaconda
  ignore_errors: yes
  get_url:
    url: https://repo.anaconda.com/archive/Anaconda3-2019.10-Linux-x86_64.sh # TODO: how to get the latest from https://www.anaconda.com/distribution/ ?
    dest: '~'

- name: Install the downloaded Anaconda
  ignore_errors: yes
  shell: bash ~/Anaconda3-2019.10-Linux-x86_64.sh -b # -u
  args:
    executable: /bin/bash
# ------------------------------------------------------------------------

# TODO: add LD_LIBRARY_PATH to bashrc ?

- name: Initialize conda # TODO: in case the VM has a version of anaconda (like the aws dl ami), instead of reinstalling simply run this?
  shell: conda init
  #shell: conda update conda -y ; conda init # TODO: when using the default anaconda3 that comes with the ami, a conda update is needed https://stackoverflow.com/questions/55477806/after-updating-conda-i-get-a-commandnotfounderror-for-conda
  args:
    executable: /bin/bash
  environment:
    PATH: /home/ubuntu/anaconda3/bin:{{ ansible_env.PATH }}
    LD_LIBRARY_PATH: "/usr/lib64/openmpi/lib/:/usr/local/cuda/lib64:/usr/local/lib:/usr/lib:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/mpi/lib:/lib/:"

- name: Install pytorch and fastai
  shell: conda install -y -c pytorch -c fastai fastai
  args:
    executable: /bin/bash
  environment:
    PATH: /home/ubuntu/anaconda3/bin:{{ ansible_env.PATH }}
    LD_LIBRARY_PATH: "/usr/lib64/openmpi/lib/:/usr/local/cuda/lib64:/usr/local/lib:/usr/lib:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/mpi/lib:/lib/:"

- name: Clone progressive_growing_of_gans repo
  ignore_errors: yes
  git:
    repo: https://github.com/tkarras/progressive_growing_of_gans
    dest: '~/progressive_growing_of_gans'

- name: Change tensorflow version on requirements file
  replace:
    path: ~/progressive_growing_of_gans/requirements-pip.txt
    regexp: 'tensorflow-gpu>=1.6.0'
    replace: 'tensorflow-gpu==1.15.2'

- name: Add PYTHONPATH to bashrc
  lineinfile:
    path: ~/.bashrc
    line: 'export PYTHONPATH=/home/ubuntu/progressive_growing_of_gans'
    insertbefore: EOF

#- name: Install requirements with pip # TODO: this does not report any fail but doesnt really install tensorflow. If I then ssh into the vm and run this by hand: works perfectly. Besides that, sys.path is the same on both cases
#  environment:
#    PATH: /home/ubuntu/anaconda3/bin:{{ ansible_env.PATH }}
#    LD_LIBRARY_PATH: "/usr/lib64/openmpi/lib/:/usr/local/cuda/lib64:/usr/local/lib:/usr/lib:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/mpi/lib:/lib/:"
#    PYTHONPATH: /home/ubuntu/progressive_growing_of_gans
#  pip:
#    requirements: ~/progressive_growing_of_gans/requirements-pip.txt

#- name: Install requirements with pip
#  environment:
#    PATH: /home/ubuntu/anaconda3/bin:{{ ansible_env.PATH }}
#    LD_LIBRARY_PATH: "/usr/lib64/openmpi/lib/:/usr/local/cuda/lib64:/usr/local/lib:/usr/lib:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/mpi/lib:/lib/:"
#    PYTHONPATH: /home/ubuntu/progressive_growing_of_gans
#  pip:
#    name:
#      - numpy>=1.13.3
#      - scipy>=1.0.0
#      - tensorflow-gpu==1.15.2
#      - moviepy>=0.2.3.2
#      - Pillow>=3.1.1
#      - lmdb>=0.93
#      - opencv-python>=3.4.0.12
#      - cryptography>=2.1.4
#      - h5py>=2.7.1
#      - six>=1.11.0

- name: Install requirements with pip # TODO: this works
  ignore_errors: yes # TODO: remove this
  args:
    executable: /bin/bash
  environment:
    PATH: /home/ubuntu/anaconda3/bin:{{ ansible_env.PATH }}
    LD_LIBRARY_PATH: "/usr/lib64/openmpi/lib/:/usr/local/cuda/lib64:/usr/local/lib:/usr/lib:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/mpi/lib:/lib/:"
    PYTHONPATH: /home/ubuntu/progressive_growing_of_gans
  shell: pip install -r ~/progressive_growing_of_gans/requirements-pip.txt

- name: To fix https://github.com/tensorflow/tensorflow/issues/23715
  shell: conda install -y -c anaconda cudnn
  args:
    executable: /bin/bash
  environment:
    PATH: /home/ubuntu/anaconda3/bin:{{ ansible_env.PATH }}
    LD_LIBRARY_PATH: "/usr/lib64/openmpi/lib/:/usr/local/cuda/lib64:/usr/local/lib:/usr/lib:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/mpi/lib:/lib/:"
