# ------------------------------------ Wait for infrastructure to be ready
- hosts: all
  become: no
  gather_facts: false
  tasks:
  - name: Waiting for VMs to be ready...
    wait_for_connection:
      timeout: 400

# ------------------------------------ Allow root ssh
- hosts: all
  become: no
  #gather_facts: true
  vars:
    open_user: "{{ ansible_user_id }}"
  tasks:
  - include_tasks: allow_root.yaml

# ------------------------------------ Set VMs hostnames (needed for Ionos)
- hosts: master
  become: yes
  tasks:
  - name: Set master hostname
    ansible.builtin.hostname:
      name: kubenode-0
- hosts: slaves
  become: yes
  tasks:
  - name: Set slaves hostnames
    ansible.builtin.hostname:
      name: kubenode-{{ query('community.general.random_string', upper=false, numbers=false, special=false, length=4)[0] }}

# ------------------------------------ pkg manager & install dependencies
- hosts: all
  become: yes
  tasks:
  - name: Disable swap (if configured)
    command: swapoff -a
  - include_tasks: firewall.yaml
  - include_tasks: bridged_traffic.yaml
  - include_tasks: pkgManagerRepo.yaml
  - include_tasks: aptWait.yaml
  - include_tasks: dependencies.yaml

# ------------------------------------ Init cluster & generate join command
- hosts: master
  become: yes
  tasks:
  - include_tasks: initCluster.yaml
  - name: Get join command
    shell: kubeadm token create --print-join-command
    register: join_command_raw
  - name: Set join command
    set_fact:
      join_command: "{{ join_command_raw.stdout_lines[0] }}"

# ------------------------------------ Make slaves join cluster
- hosts: slaves
  become: yes
  tasks:
  - name: Slaves join cluster
    shell: "{{ hostvars[groups['master'][0]]['join_command'] }} --ignore-preflight-errors all  >> node_joined.txt"
    args:
      chdir: $HOME
      creates: node_joined.txt
