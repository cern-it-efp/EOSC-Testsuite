#!/bin/bash

ld="src/logging" # logging dir
rm -f $ld/header $ld/killMe $ld/footer $ld/hpcTest $ld/dlTest $ld/shared $ld/logs $ld/end &> /dev/null #Delete log files from previous failed runs

opts=""
while [[ "$1" != "" ]]; do
  if [[ "$1" == '-j' ]]; then
    jenkins=true
    shift
  elif [[ "$1" == '--destroy' ]]; then
    cd src
    python3 -B -u main.py $1 $2
    outStat=$?
    cd ..
    exit $outStat
  else
    opts+=" "$1
    shift
  fi
done

catAll(){
  if [[ -s header ]]; then
    cat header > logs; echo "" >> logs
  fi
  for f in shared dlTest hpcTest footer; do
    if [[ -s $f ]]; then # cat only the files that contain something
      cat $f >> logs; echo "" >> logs
    fi
  done
  if  [[ $jenkins != true ]]; then
    cat logs # only runs this if it's not a jenkins run
  fi
}
export -f catAll

watchFunct(){
  cd $ld
  touch logs header shared dlTest hpcTest footer end
  if  [[ $jenkins = true ]]; then
    echo "Logs in file $(pwd)/logs"
    while true; do catAll; sleep 2; done & echo $! > killMe
  else
    watch -n 0.1 -t -x bash -c catAll & echo $! > killMe
  fi
  cd ../..
}

############# TEST SUITE RUN #############
watchFunct &
cd src
python3 -B -u main.py $opts &> ../logs
outStat=$?
cd ..
##########################################

#TS run complete, kill logger and cat logs to main terminal:
kill $(cat $ld/killMe)
sleep 1
if [[ -s $ld/end ]]; then
  cat $ld/end >> $ld/logs
fi
cat $ld/logs

if [[ $outStat != 0 ]]; then
  cat logs
  exit $outStat
fi
